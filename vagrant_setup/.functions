## Functions

# cll dir  ::=  cd to dir and do a ll (alias)
function cll() { cd $1 && ll ; }

# function for git branch access
function parse_git_branch() { git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ git: \1/' ; }

# function for mercurial revision access
function parse_hg_revision() { hg branch 2> /dev/null | sed -e 's,\(.*\), hg: \1,' ; }

# go to the workspace
workto ()
{
    local p;
    local f;
    p="$HOME/workspace"
    f=`find ${p} -type d -not -path '*/.*' | grep "${1}" | awk '{ print length, $0 }' | sort -n | cut -d" " -f2- | head -n 1`;
    if [ -n "$f" ]; then
        cd $f;
        return;
    fi;
    echo "Failed to find $@"
}

# go to a go path package dir
goto ()
{
    local p;
    local f;
    for p in `echo $GOPATH | tr ':' '\n'`;
    do
        f=`find ${p}/src/ -type d -not -path '*/.*' | grep "${1}" | awk '{ print length, $0 }' | sort -n | cut -d" " -f2- | head -n 1`;
        if [ -n "$f" ]; then
            cd $f;
            return;
        fi;
    done;
    workto "$@"
}

# echo PATH (primarily for testing)
echoPath ()
{
    echo \(${1}\) PATH = $PATH
}

# standard git repository initialisation to origin master
ginit ()
{
    (echo "ginit: clean";git clean -fdx) \
    && (echo "ginit: checkout master";git checkout master) \
    && (echo "ginit: pull origin master";git pull origin master) \
    && (echo "ginit: fetch origin";git fetch origin) \
    && (echo "ginit: ... tags";git fetch origin --tags) \
    && (echo "ginit: update submodules";git submodule update --init)
}
